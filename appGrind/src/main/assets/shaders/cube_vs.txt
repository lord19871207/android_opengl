#version 300 es

uniform mat4 uViewM;
uniform mat4 uModelViewM;
uniform mat4 uModelViewProjM;
uniform vec3 uEyePositionW;

layout (location = 0) in vec4 inPosition;
layout (location = 1) in vec3 inNormal;

out vec3 vPosition;
out vec3 vNormal;
out vec3 vReflected;

void main() {
    gl_Position = uModelViewProjM * inPosition;
    vPosition = (uModelViewM * inPosition).xyz;
    vNormal = normalize(mat3(uModelViewM) * inNormal);
    vReflected = reflect(vPosition - uEyePositionW, vNormal);
    vReflected = mat3(uViewM) * vReflected;
}
