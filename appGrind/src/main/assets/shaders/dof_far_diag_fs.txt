#version 300 es

uniform sampler2D sTexture;
uniform vec2 uSampleOffset1;
uniform vec2 uSampleOffset2;
uniform int uCount;

in vec2 vTexPosition;

out vec4 outFragColor;

void main() {
    vec4 colorCenter = texture(sTexture, vTexPosition);

    vec4 sample = vec4(0.0);
    vec4 colorSum1 = vec4(0.0);
    vec4 colorSum2 = vec4(0.0);

    float centerCoc = colorCenter.a;
    float weight = 0.0;
    float weightSum1 = 0.0;
    float weightSum2 = 0.0;

    vec2 texOffset1 = uSampleOffset1 * centerCoc * 0.5;
    vec2 texOffset2 = uSampleOffset2 * centerCoc * 0.5;

    for (int i = 0; i < uCount; ++i) {
        sample = texture(sTexture, vTexPosition + texOffset1);
        weight = centerCoc > sample.a ? sample.a : 1.0;
        colorSum1 += sample * weight;
        weightSum1 += weight;

        sample = texture(sTexture, vTexPosition - texOffset1);
        weight = centerCoc > sample.a ? sample.a : 1.0;
        colorSum1 += sample * weight;
        weightSum1 += weight;

        sample = texture(sTexture, vTexPosition + texOffset2);
        weight = centerCoc > sample.a ? sample.a : 1.0;
        colorSum2 += sample * weight;
        weightSum2 += weight;

        sample = texture(sTexture, vTexPosition - texOffset2);
        weight = centerCoc > sample.a ? sample.a : 1.0;
        colorSum2 += sample * weight;
        weightSum2 += weight;

        texOffset1 += uSampleOffset1 * centerCoc;
        texOffset2 += uSampleOffset2 * centerCoc;
    }

    outFragColor = min(colorSum1 / weightSum1, colorSum2 / weightSum2);
}
