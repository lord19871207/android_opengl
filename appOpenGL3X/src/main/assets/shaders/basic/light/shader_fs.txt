#version 300 es

uniform vec4 uMaterial;

in vec3 vPosition;
in vec3 vNormal;

out vec4 outFragColor;

void main() {
    vec3 L = normalize(vec3(0.0) - vPosition);
    vec3 E = normalize(-vPosition);
    vec3 R = normalize(-reflect(L, vNormal));

    float Iamb = uMaterial.x;

    float Idiff = uMaterial.y * max(dot(vNormal, L), 0.0);
    Idiff = clamp(Idiff, 0.0, 1.0);

    float Ispec = uMaterial.z * pow(max(dot(R, E), 0.0), 0.3 * uMaterial.w);
    Ispec = clamp(Ispec, 0.0, 1.0);

    vec3 color = vec3(0.3, 0.6, 1.0);
    outFragColor = vec4(color * (Iamb + Idiff + Ispec), 1.0);
}
