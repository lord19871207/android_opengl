#version 300 es

uniform sampler2D sTextureShadow;
uniform vec4 uMaterial;
uniform vec3 uLightPosition;

in vec3 vPosition;
in vec3 vNormal;
in vec4 vShadowPosition;

out vec4 outFragColor;

void main() {
    vec3 L = normalize(uLightPosition - vPosition);
    vec3 E = normalize(-vPosition);
    vec3 R = normalize(-reflect(L, vNormal));

    float Iamb = uMaterial.x;

    float Idiff = uMaterial.y * max(dot(vNormal, L), 0.0);
    Idiff = clamp(Idiff, 0.0, 1.0);

    float Ispec = uMaterial.z * pow(max(dot(R, E), 0.0), 0.3 * uMaterial.w);
    Ispec = clamp(Ispec, 0.0, 1.0);

    float S = texture(sTextureShadow, vShadowPosition.xy / vShadowPosition.w).r;
    if (S < vShadowPosition.z / vShadowPosition.w - 0.0005) {
        S = 0.5;
    } else {
        S = 1.0;
    }

    vec3 color = vec3(0.3, 0.6, 1.0);
    outFragColor = vec4(color * (Iamb + S * (Idiff + Ispec)), 1.0);
}
