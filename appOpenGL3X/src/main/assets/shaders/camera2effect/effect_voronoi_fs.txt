#version 300 es

uniform sampler2D sTexture;
uniform sampler2D sTextureNoise;
uniform float uGlobalTime;

in vec2 vTexPosition;

out vec4 outFragColor;

vec2 hash2(in vec2 p) {
	return texture(sTextureNoise, (p + 0.5) / 256.0).xy;
}

vec2 voronoi(in vec2 x) {
    vec2 n = floor(x);
    vec2 f = fract(x);
	vec2 mp;
    float md = 8.0;
    for( int j=-1; j<=1; j++ )
    for( int i=-1; i<=1; i++ ) {
        vec2 g = vec2(float(i),float(j));
		vec2 o = hash2(n + g);
        o = 0.5 + 0.5 * sin(uGlobalTime + 6.2831 * o);
        vec2 r = g + o - f;
        float d = dot(r,r);
        if(d < md) {
            md = d;
            mp = n + g;
        }
    }
    return mp;
}

void main() {
    const float scale = 64.0;
    vec2 p = gl_FragCoord.xy / vec2(256.0);
    vec2 mp = voronoi(scale * vTexPosition);
    vec3 col = texture(sTexture, mp / scale).rgb;
	outFragColor = vec4(col, 1.0);
}
